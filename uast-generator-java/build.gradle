buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'java-library'
apply plugin: 'org.junit.platform.gradle.plugin'

ext.junitJupiterVersion  = '5.1.0'
ext.gsonVersion  = '2.8.2'
ext.javaFrontendVersion = '5.1.1.13214'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

dependencies {
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation("org.sonarsource.java:java-frontend:${javaFrontendVersion}") {
        exclude group: 'junit', module: 'junit'
    }

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    // to run tests on eclipse...
    testCompile "org.junit.platform:junit-platform-launcher:1.1.0"
}

task generateUast(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "org.sonar.uast.generator.java.Generator"
    if (project.hasProperty("inputFile")) {
        args project.inputFile
    }
}

generateUast.dependsOn build
