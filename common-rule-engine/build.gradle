plugins {
    id 'java-library'
    id 'jacoco'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = "UTF-8"
}

compileTestJava.options.encoding = "UTF-8"

dependencies {
    compile     'com.google.code.gson:gson'
    compileOnly 'com.google.code.findbugs:jsr305'
    compile     'org.sonarsource.sonarqube:sonar-plugin-api'

    testCompile 'org.assertj:assertj-core'

    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testCompile 'org.junit.jupiter:junit-jupiter-params'
    testCompile 'org.junit.platform:junit-platform-launcher'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    testCompile 'org.sonarsource.analyzer-commons:sonar-analyzer-test-commons'
    testCompile project(':uast-generator-java')
}


test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat 'full' // log the full stack trace (default is the 1st line of the stack trace)
        events "skipped", "failed" // verbose log for failed and skipped tests (by default the name of the tests are not logged)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}
