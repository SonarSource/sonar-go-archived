(*ast.File) {
  Doc: (*ast.CommentGroup)(nil),
  Package: token.Pos(1),
  Name: (*ast.Ident) {
      NamePos: token.Pos(9),
      Name: "main",
      Obj: (*ast.Object)(nil)
    },
  Decls: []ast.Decl{
    (*ast.FuncDecl) {
        Doc: (*ast.CommentGroup)(nil),
        Recv: (*ast.FieldList)(nil),
        Name: (*ast.Ident) {
            NamePos: token.Pos(20),
            Name: "nonCompliantFun1",
            Obj: (*ast.Object) {
                Kind: ast.ObjKind(5),
                Name: "nonCompliantFun1",
                Decl: <REC(*ast.FuncDecl)>,
                Data: interface{}(nil),
                Type: interface{}(nil)
              }
          },
        Type: (*ast.FuncType) {
            Func: token.Pos(15),
            Params: (*ast.FieldList) {
                Opening: token.Pos(36),
                List: []*ast.Field{
                  (*ast.Field) {
                      Doc: (*ast.CommentGroup)(nil),
                      Names: []*ast.Ident{
                        (*ast.Ident) {
                            NamePos: token.Pos(37),
                            Name: "p1",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p1",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(41),
                            Name: "p2",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p2",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(45),
                            Name: "p3",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p3",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(49),
                            Name: "p4",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p4",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(53),
                            Name: "p5",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p5",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(57),
                            Name: "p6",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p6",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(61),
                            Name: "p7",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p7",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(65),
                            Name: "p8",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p8",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          }
                        },
                      Type: (*ast.Ident) {
                          NamePos: token.Pos(68),
                          Name: "int",
                          Obj: (*ast.Object)(nil)
                        },
                      Tag: (*ast.BasicLit)(nil),
                      Comment: (*ast.CommentGroup)(nil)
                    }
                  },
                Closing: token.Pos(71)
              },
            Results: (*ast.FieldList)(nil)
          },
        Body: (*ast.BlockStmt) {
            Lbrace: token.Pos(73),
            List: []ast.Stmt(nil),
            Rbrace: token.Pos(92)
          }
      },
    (*ast.FuncDecl) {
        Doc: (*ast.CommentGroup)(nil),
        Recv: (*ast.FieldList)(nil),
        Name: (*ast.Ident) {
            NamePos: token.Pos(100),
            Name: "nonCompliantFun2",
            Obj: (*ast.Object) {
                Kind: ast.ObjKind(5),
                Name: "nonCompliantFun2",
                Decl: <REC(*ast.FuncDecl)>,
                Data: interface{}(nil),
                Type: interface{}(nil)
              }
          },
        Type: (*ast.FuncType) {
            Func: token.Pos(95),
            Params: (*ast.FieldList) {
                Opening: token.Pos(116),
                List: []*ast.Field{
                  (*ast.Field) {
                      Doc: (*ast.CommentGroup)(nil),
                      Names: []*ast.Ident{
                        (*ast.Ident) {
                            NamePos: token.Pos(117),
                            Name: "p1",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p1",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(121),
                            Name: "p2",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p2",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(125),
                            Name: "p3",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p3",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(129),
                            Name: "p4",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p4",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          }
                        },
                      Type: (*ast.Ident) {
                          NamePos: token.Pos(132),
                          Name: "int",
                          Obj: (*ast.Object)(nil)
                        },
                      Tag: (*ast.BasicLit)(nil),
                      Comment: (*ast.CommentGroup)(nil)
                    },
                  (*ast.Field) {
                      Doc: (*ast.CommentGroup)(nil),
                      Names: []*ast.Ident{
                        (*ast.Ident) {
                            NamePos: token.Pos(137),
                            Name: "p5",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p5",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(141),
                            Name: "p6",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p6",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(145),
                            Name: "p7",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p7",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(149),
                            Name: "p8",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p8",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          }
                        },
                      Type: (*ast.Ident) {
                          NamePos: token.Pos(152),
                          Name: "string",
                          Obj: (*ast.Object)(nil)
                        },
                      Tag: (*ast.BasicLit)(nil),
                      Comment: (*ast.CommentGroup)(nil)
                    }
                  },
                Closing: token.Pos(158)
              },
            Results: (*ast.FieldList)(nil)
          },
        Body: (*ast.BlockStmt) {
            Lbrace: token.Pos(160),
            List: []ast.Stmt(nil),
            Rbrace: token.Pos(179)
          }
      },
    (*ast.FuncDecl) {
        Doc: (*ast.CommentGroup)(nil),
        Recv: (*ast.FieldList)(nil),
        Name: (*ast.Ident) {
            NamePos: token.Pos(187),
            Name: "compliantFun1",
            Obj: (*ast.Object) {
                Kind: ast.ObjKind(5),
                Name: "compliantFun1",
                Decl: <REC(*ast.FuncDecl)>,
                Data: interface{}(nil),
                Type: interface{}(nil)
              }
          },
        Type: (*ast.FuncType) {
            Func: token.Pos(182),
            Params: (*ast.FieldList) {
                Opening: token.Pos(200),
                List: []*ast.Field{
                  (*ast.Field) {
                      Doc: (*ast.CommentGroup)(nil),
                      Names: []*ast.Ident{
                        (*ast.Ident) {
                            NamePos: token.Pos(201),
                            Name: "p1",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p1",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(205),
                            Name: "p2",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p2",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(209),
                            Name: "p3",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p3",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(213),
                            Name: "p4",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p4",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(217),
                            Name: "p5",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p5",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(221),
                            Name: "p6",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p6",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(225),
                            Name: "p7",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p7",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          }
                        },
                      Type: (*ast.Ident) {
                          NamePos: token.Pos(228),
                          Name: "int",
                          Obj: (*ast.Object)(nil)
                        },
                      Tag: (*ast.BasicLit)(nil),
                      Comment: (*ast.CommentGroup)(nil)
                    }
                  },
                Closing: token.Pos(231)
              },
            Results: (*ast.FieldList)(nil)
          },
        Body: (*ast.BlockStmt) {
            Lbrace: token.Pos(233),
            List: []ast.Stmt(nil),
            Rbrace: token.Pos(235)
          }
      },
    (*ast.FuncDecl) {
        Doc: (*ast.CommentGroup)(nil),
        Recv: (*ast.FieldList)(nil),
        Name: (*ast.Ident) {
            NamePos: token.Pos(243),
            Name: "compliantFun2",
            Obj: (*ast.Object) {
                Kind: ast.ObjKind(5),
                Name: "compliantFun2",
                Decl: <REC(*ast.FuncDecl)>,
                Data: interface{}(nil),
                Type: interface{}(nil)
              }
          },
        Type: (*ast.FuncType) {
            Func: token.Pos(238),
            Params: (*ast.FieldList) {
                Opening: token.Pos(256),
                List: []*ast.Field{
                  (*ast.Field) {
                      Doc: (*ast.CommentGroup)(nil),
                      Names: []*ast.Ident{
                        (*ast.Ident) {
                            NamePos: token.Pos(257),
                            Name: "p1",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p1",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(261),
                            Name: "p2",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p2",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(265),
                            Name: "p3",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p3",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(269),
                            Name: "p4",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p4",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          }
                        },
                      Type: (*ast.Ident) {
                          NamePos: token.Pos(272),
                          Name: "int",
                          Obj: (*ast.Object)(nil)
                        },
                      Tag: (*ast.BasicLit)(nil),
                      Comment: (*ast.CommentGroup)(nil)
                    },
                  (*ast.Field) {
                      Doc: (*ast.CommentGroup)(nil),
                      Names: []*ast.Ident{
                        (*ast.Ident) {
                            NamePos: token.Pos(277),
                            Name: "p5",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p5",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(281),
                            Name: "p6",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p6",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          },
                        (*ast.Ident) {
                            NamePos: token.Pos(285),
                            Name: "p7",
                            Obj: (*ast.Object) {
                                Kind: ast.ObjKind(4),
                                Name: "p7",
                                Decl: <REC(*ast.Field)>,
                                Data: interface{}(nil),
                                Type: interface{}(nil)
                              }
                          }
                        },
                      Type: (*ast.Ident) {
                          NamePos: token.Pos(288),
                          Name: "string",
                          Obj: (*ast.Object)(nil)
                        },
                      Tag: (*ast.BasicLit)(nil),
                      Comment: (*ast.CommentGroup)(nil)
                    }
                  },
                Closing: token.Pos(294)
              },
            Results: (*ast.FieldList)(nil)
          },
        Body: (*ast.BlockStmt) {
            Lbrace: token.Pos(296),
            List: []ast.Stmt(nil),
            Rbrace: token.Pos(298)
          }
      }
    },
  Scope: (*ast.Scope) {
      Outer: (*ast.Scope)(nil),
      Objects: map[string]*ast.Object{
        "compliantFun1": (*ast.Object) {
              Kind: ast.ObjKind(5),
              Name: "compliantFun1",
              Decl: (*ast.FuncDecl) {
                  Doc: (*ast.CommentGroup)(nil),
                  Recv: (*ast.FieldList)(nil),
                  Name: (*ast.Ident) {
                      NamePos: token.Pos(187),
                      Name: "compliantFun1",
                      Obj: <REC(*ast.Object)>
                    },
                  Type: (*ast.FuncType) {
                      Func: token.Pos(182),
                      Params: (*ast.FieldList) {
                          Opening: token.Pos(200),
                          List: []*ast.Field{
                            (*ast.Field) {
                                Doc: (*ast.CommentGroup)(nil),
                                Names: []*ast.Ident{
                                  (*ast.Ident) {
                                      NamePos: token.Pos(201),
                                      Name: "p1",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p1",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(205),
                                      Name: "p2",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p2",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(209),
                                      Name: "p3",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p3",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(213),
                                      Name: "p4",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p4",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(217),
                                      Name: "p5",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p5",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(221),
                                      Name: "p6",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p6",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(225),
                                      Name: "p7",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p7",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    }
                                  },
                                Type: (*ast.Ident) {
                                    NamePos: token.Pos(228),
                                    Name: "int",
                                    Obj: (*ast.Object)(nil)
                                  },
                                Tag: (*ast.BasicLit)(nil),
                                Comment: (*ast.CommentGroup)(nil)
                              }
                            },
                          Closing: token.Pos(231)
                        },
                      Results: (*ast.FieldList)(nil)
                    },
                  Body: (*ast.BlockStmt) {
                      Lbrace: token.Pos(233),
                      List: []ast.Stmt(nil),
                      Rbrace: token.Pos(235)
                    }
                },
              Data: interface{}(nil),
              Type: interface{}(nil)
            },
        "compliantFun2": (*ast.Object) {
              Kind: ast.ObjKind(5),
              Name: "compliantFun2",
              Decl: (*ast.FuncDecl) {
                  Doc: (*ast.CommentGroup)(nil),
                  Recv: (*ast.FieldList)(nil),
                  Name: (*ast.Ident) {
                      NamePos: token.Pos(243),
                      Name: "compliantFun2",
                      Obj: <REC(*ast.Object)>
                    },
                  Type: (*ast.FuncType) {
                      Func: token.Pos(238),
                      Params: (*ast.FieldList) {
                          Opening: token.Pos(256),
                          List: []*ast.Field{
                            (*ast.Field) {
                                Doc: (*ast.CommentGroup)(nil),
                                Names: []*ast.Ident{
                                  (*ast.Ident) {
                                      NamePos: token.Pos(257),
                                      Name: "p1",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p1",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(261),
                                      Name: "p2",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p2",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(265),
                                      Name: "p3",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p3",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(269),
                                      Name: "p4",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p4",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    }
                                  },
                                Type: (*ast.Ident) {
                                    NamePos: token.Pos(272),
                                    Name: "int",
                                    Obj: (*ast.Object)(nil)
                                  },
                                Tag: (*ast.BasicLit)(nil),
                                Comment: (*ast.CommentGroup)(nil)
                              },
                            (*ast.Field) {
                                Doc: (*ast.CommentGroup)(nil),
                                Names: []*ast.Ident{
                                  (*ast.Ident) {
                                      NamePos: token.Pos(277),
                                      Name: "p5",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p5",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(281),
                                      Name: "p6",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p6",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(285),
                                      Name: "p7",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p7",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    }
                                  },
                                Type: (*ast.Ident) {
                                    NamePos: token.Pos(288),
                                    Name: "string",
                                    Obj: (*ast.Object)(nil)
                                  },
                                Tag: (*ast.BasicLit)(nil),
                                Comment: (*ast.CommentGroup)(nil)
                              }
                            },
                          Closing: token.Pos(294)
                        },
                      Results: (*ast.FieldList)(nil)
                    },
                  Body: (*ast.BlockStmt) {
                      Lbrace: token.Pos(296),
                      List: []ast.Stmt(nil),
                      Rbrace: token.Pos(298)
                    }
                },
              Data: interface{}(nil),
              Type: interface{}(nil)
            },
        "nonCompliantFun1": (*ast.Object) {
              Kind: ast.ObjKind(5),
              Name: "nonCompliantFun1",
              Decl: (*ast.FuncDecl) {
                  Doc: (*ast.CommentGroup)(nil),
                  Recv: (*ast.FieldList)(nil),
                  Name: (*ast.Ident) {
                      NamePos: token.Pos(20),
                      Name: "nonCompliantFun1",
                      Obj: <REC(*ast.Object)>
                    },
                  Type: (*ast.FuncType) {
                      Func: token.Pos(15),
                      Params: (*ast.FieldList) {
                          Opening: token.Pos(36),
                          List: []*ast.Field{
                            (*ast.Field) {
                                Doc: (*ast.CommentGroup)(nil),
                                Names: []*ast.Ident{
                                  (*ast.Ident) {
                                      NamePos: token.Pos(37),
                                      Name: "p1",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p1",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(41),
                                      Name: "p2",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p2",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(45),
                                      Name: "p3",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p3",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(49),
                                      Name: "p4",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p4",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(53),
                                      Name: "p5",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p5",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(57),
                                      Name: "p6",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p6",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(61),
                                      Name: "p7",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p7",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(65),
                                      Name: "p8",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p8",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    }
                                  },
                                Type: (*ast.Ident) {
                                    NamePos: token.Pos(68),
                                    Name: "int",
                                    Obj: (*ast.Object)(nil)
                                  },
                                Tag: (*ast.BasicLit)(nil),
                                Comment: (*ast.CommentGroup)(nil)
                              }
                            },
                          Closing: token.Pos(71)
                        },
                      Results: (*ast.FieldList)(nil)
                    },
                  Body: (*ast.BlockStmt) {
                      Lbrace: token.Pos(73),
                      List: []ast.Stmt(nil),
                      Rbrace: token.Pos(92)
                    }
                },
              Data: interface{}(nil),
              Type: interface{}(nil)
            },
        "nonCompliantFun2": (*ast.Object) {
              Kind: ast.ObjKind(5),
              Name: "nonCompliantFun2",
              Decl: (*ast.FuncDecl) {
                  Doc: (*ast.CommentGroup)(nil),
                  Recv: (*ast.FieldList)(nil),
                  Name: (*ast.Ident) {
                      NamePos: token.Pos(100),
                      Name: "nonCompliantFun2",
                      Obj: <REC(*ast.Object)>
                    },
                  Type: (*ast.FuncType) {
                      Func: token.Pos(95),
                      Params: (*ast.FieldList) {
                          Opening: token.Pos(116),
                          List: []*ast.Field{
                            (*ast.Field) {
                                Doc: (*ast.CommentGroup)(nil),
                                Names: []*ast.Ident{
                                  (*ast.Ident) {
                                      NamePos: token.Pos(117),
                                      Name: "p1",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p1",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(121),
                                      Name: "p2",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p2",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(125),
                                      Name: "p3",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p3",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(129),
                                      Name: "p4",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p4",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    }
                                  },
                                Type: (*ast.Ident) {
                                    NamePos: token.Pos(132),
                                    Name: "int",
                                    Obj: (*ast.Object)(nil)
                                  },
                                Tag: (*ast.BasicLit)(nil),
                                Comment: (*ast.CommentGroup)(nil)
                              },
                            (*ast.Field) {
                                Doc: (*ast.CommentGroup)(nil),
                                Names: []*ast.Ident{
                                  (*ast.Ident) {
                                      NamePos: token.Pos(137),
                                      Name: "p5",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p5",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(141),
                                      Name: "p6",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p6",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(145),
                                      Name: "p7",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p7",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    },
                                  (*ast.Ident) {
                                      NamePos: token.Pos(149),
                                      Name: "p8",
                                      Obj: (*ast.Object) {
                                          Kind: ast.ObjKind(4),
                                          Name: "p8",
                                          Decl: <REC(*ast.Field)>,
                                          Data: interface{}(nil),
                                          Type: interface{}(nil)
                                        }
                                    }
                                  },
                                Type: (*ast.Ident) {
                                    NamePos: token.Pos(152),
                                    Name: "string",
                                    Obj: (*ast.Object)(nil)
                                  },
                                Tag: (*ast.BasicLit)(nil),
                                Comment: (*ast.CommentGroup)(nil)
                              }
                            },
                          Closing: token.Pos(158)
                        },
                      Results: (*ast.FieldList)(nil)
                    },
                  Body: (*ast.BlockStmt) {
                      Lbrace: token.Pos(160),
                      List: []ast.Stmt(nil),
                      Rbrace: token.Pos(179)
                    }
                },
              Data: interface{}(nil),
              Type: interface{}(nil)
            }
        }
    },
  Imports: []*ast.ImportSpec(nil),
  Unresolved: []*ast.Ident{
    (*ast.Ident) {
        NamePos: token.Pos(68),
        Name: "int",
        Obj: (*ast.Object)(nil)
      },
    (*ast.Ident) {
        NamePos: token.Pos(132),
        Name: "int",
        Obj: (*ast.Object)(nil)
      },
    (*ast.Ident) {
        NamePos: token.Pos(152),
        Name: "string",
        Obj: (*ast.Object)(nil)
      },
    (*ast.Ident) {
        NamePos: token.Pos(228),
        Name: "int",
        Obj: (*ast.Object)(nil)
      },
    (*ast.Ident) {
        NamePos: token.Pos(272),
        Name: "int",
        Obj: (*ast.Object)(nil)
      },
    (*ast.Ident) {
        NamePos: token.Pos(288),
        Name: "string",
        Obj: (*ast.Object)(nil)
      }
    },
  Comments: []*ast.CommentGroup{
    (*ast.CommentGroup) {
        List: []*ast.Comment{
          (*ast.Comment) {
              Slash: token.Pos(76),
              Text: "// Noncompliant"
            }
          }
      },
    (*ast.CommentGroup) {
        List: []*ast.Comment{
          (*ast.Comment) {
              Slash: token.Pos(163),
              Text: "// Noncompliant"
            }
          }
      }
    }
}
