apply plugin: 'java'


test {
    onlyIf {
        System.env.ruling == "true"
    }
    useJUnitPlatform()
    outputs.upToDateWhen {false}
    def orchestratorProps = System.getProperties().findAll { it.key.startsWith("orchestrator") || it.key.startsWith("sonar") }.collect { it.key }
    systemProperties System.getProperties().subMap(orchestratorProps)
    if (systemProperties["sonar.runtimeVersion"] == null && System.env.SONARSOURCE_QA != "true" ) {
        systemProperty "sonar.runtimeVersion", "LATEST_RELEASE"
    }
    afterEvaluate {
        systemProperty "goVersion", version
    }
}

dependencies {

    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    testCompile 'org.junit.platform:junit-platform-launcher'

    testCompile 'org.sonarsource.orchestrator:sonar-orchestrator'
    testCompile 'org.sonarsource.analyzer-commons:sonar-analyzer-commons'

    testCompile 'org.assertj:assertj-core'
}
