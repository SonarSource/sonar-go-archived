plugins {
    id 'org.sonarqube' version '2.6.2'
    id 'com.jfrog.artifactory' version '4.7.0'
    id 'io.spring.dependency-management' version '1.0.4.RELEASE' apply false
}

sonarqube {
    properties {
        property 'sonar.projectName', projectTitle
    }
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'

    // Replaces the version defined in sources, usually x.y-SNAPSHOT, by a version identifying the build.
    def buildNumber = System.getProperty("buildNumber")
    if (version.endsWith('-SNAPSHOT') && buildNumber != null) {
        version = version.replace('-SNAPSHOT', ".0.$buildNumber")
    }

    ext {
        release = project.hasProperty('release') && project.getProperty('release')
    }

    repositories {
        def repository = project.hasProperty('cix') ? 'sonarsource-qa' : 'sonarsource'
        maven {
            url "https://repox.sonarsource.com/${repository}"
        }
    }
}

subprojects {
    // do not publish to Artifactory by default
    artifactoryPublish.skip = true

    apply plugin: 'io.spring.dependency-management'
    dependencyManagement {
        dependencies {
            dependency 'com.google.code.gson:gson:2.8.2'
            dependency 'com.google.code.findbugs:jsr305:3.0.2'
            dependency 'org.assertj:assertj-core:3.9.0'
            dependencySet(group: 'org.junit.jupiter', version: '5.1.0') {
                entry 'junit-jupiter-api'
                entry 'junit-jupiter-engine'
                entry 'junit-jupiter-params'
            }
            dependency 'org.junit.platform:junit-platform-launcher:1.1.0'
            dependency('org.mockito:mockito-core:2.15.0') {
                exclude 'org.hamcrest:hamcrest-core'
            }
            dependency 'org.sonarsource.analyzer-commons:sonar-analyzer-commons:1.5.0.178'
            dependency 'org.sonarsource.sonarqube:sonar-plugin-api:6.7'
        }
    }
}

artifactory {
    clientConfig.setIncludeEnvVars(true)
    clientConfig.setEnvVarsExcludePatterns('*password*,*PASSWORD*,*secret*,*MAVEN_CMD_LINE_ARGS*,sun.java.command,*token*,*TOKEN*,*LOGIN*,*login*')
    contextUrl = System.getenv('ARTIFACTORY_URL')
    publish {
        repository {
            repoKey = System.getenv('ARTIFACTORY_DEPLOY_REPO')
            username = System.getenv('ARTIFACTORY_DEPLOY_USERNAME')
            password = System.getenv('ARTIFACTORY_DEPLOY_PASSWORD')
        }
        defaults {
            properties = [
                    'build.name': 'sonar-go',
                    'build.number': (System.getenv('BUILD_ID') ?: System.getenv('BUILD_NUMBER')),
                    'pr.branch.target': System.getenv('PULL_REQUEST_BRANCH_TARGET'),
                    'pr.number': System.getenv('PULL_REQUEST_NUMBER'),
                    'vcs.branch': System.getenv('GIT_BRANCH'),
                    'vcs.revision': System.getenv('GIT_COMMIT'),
                    'version': version
            ]
            publications('mavenJava')
            publishPom = true
            publishIvy = false
        }
    }
    clientConfig.info.setBuildNumber(System.getenv('BUILD_NUMBER'))
    // Define the artifacts to be deployed to https://sonarsource.bintray.com on releases
    clientConfig.info.addEnvironmentProperty('ARTIFACTS_TO_PUBLISH', "${project.group}:sonar-go-plugin:jar")
    // The name of this variable is important because it's used by the delivery process when extracting version from Artifactory build info.
    clientConfig.info.addEnvironmentProperty('PROJECT_VERSION', "${version}")
}
